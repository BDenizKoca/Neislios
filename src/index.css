@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add global styles and resets here */
body {
  /* Apply light mode default and specific dark mode background */
  @apply bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200;
  margin: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Stronger override for dark mode background */
:root.dark {
  --bg-color: #202020; /* Neutral dark gray hex value */
}

/* Hide FAB when modals are open */
body.modal-open .floating-action-button {
  display: none !important;
}

/* Floating Action Button positioning */
.floating-action-button {
  --fab-right: initial;
  --fab-bottom: initial;
  --fab-left: initial;
  --fab-top: initial;
}

.floating-action-button.positioned {
  right: var(--fab-right);
  bottom: var(--fab-bottom);
  left: var(--fab-left);
  top: var(--fab-top);
}

.floating-action-button.fab-hidden {
  display: none;
}

.floating-action-button.fab-visible {
  display: block;
}

/* Drag handle styles */
.drag-handle {
  touch-action: none;
}

/* Sortable item styles */
.sortable-item {
  /* Base styles for sortable items */
  transition-property: transform, opacity;
  --sortable-transform: none;
  --sortable-transition: none;
  transform: var(--sortable-transform);
  transition: var(--sortable-transition);
}

.sortable-item.dragging {
  opacity: 0.5;
  z-index: 10;
}

.sortable-item.not-dragging {
  opacity: 1;
  z-index: auto;
}

.dark body,
.dark .bg-gray-100,
.dark main,
.dark div[class*="bg-"] {
  background-color: var(--bg-color) !important;
}

/* Random Pick Animation */
@keyframes hype-animation {
  0% { transform: scale(0.5); opacity: 0; }
  70% { transform: scale(1.05); opacity: 1; } /* Overshoot slightly */
  100% { transform: scale(1); opacity: 1; }
}

.animate-hype {
  animation: hype-animation 0.5s ease-out forwards;
}

/* Enhanced Slot Machine Animation */
.slot-machine-container {
  position: relative;
  /* height: 60px; */ /* Remove fixed height, rely on Tailwind class in component */
  overflow: hidden;
  -webkit-mask-image: linear-gradient(to bottom, transparent 0%, black 15%, black 85%, transparent 100%);
  mask-image: linear-gradient(to bottom, transparent 0%, black 15%, black 85%, transparent 100%);
}

.slot-reel {
  position: relative;
  width: 100%;
  height: 300px; /* Taller to accommodate multiple items */
  transform-style: preserve-3d;
}

@keyframes slot-spin {
  0% { transform: translateY(0); }
  /* Translate by a much larger amount to simulate faster spinning */
  /* Reduce translation for slower spin */
  /* Reduce translation further */
  /* Use the CSS variable set by the component */
  100% { transform: translateY(var(--reel-translation, -500%)); } /* Fallback just in case */
}

.animate-slot-spin {
  /* Duration is set inline, remove infinite */
  /* Define only name and timing function, duration/iteration set inline/conditionally */
  animation: slot-spin 1.5s linear infinite; /* Slow down loop duration */
}

.slot-item {
  position: absolute;
  width: 100%;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  transition: all 0.2s ease;
}

.slot-final-pick {
  animation: highlight-pick 0.5s ease-out forwards;
}

@keyframes highlight-pick {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); text-shadow: 0 0 10px rgba(255, 255, 255, 0.5); }
  100% { transform: scale(1); text-shadow: 0 0 15px rgba(255, 255, 255, 0.3); }
}

/* Old slot animation (keeping for compatibility) */
@keyframes old-slot-spin {
  0% { transform: translateY(-10px); opacity: 0; }
  20% { transform: translateY(0); opacity: 1; } /* Quick appear */
  80% { transform: translateY(0); opacity: 1; } /* Hold */
  100% { transform: translateY(10px); opacity: 0; } /* Quick disappear */
}
